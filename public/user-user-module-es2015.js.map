{"version":3,"sources":["./src/app/user/change-password/change-password.component.html","./src/app/user/edit-user/edit-user.component.html","./src/app/user/user-booking-service/user-booking-service.component.html","./src/app/user/user-dashboard/user-dashboard.component.html","./src/app/user/user-detailed-booking/user-detailed-booking.component.html","./src/app/user/user-header/user-header.component.html","./src/app/user/user-older-history/user-older-history.component.html","./src/app/user/usersignin/usersignin.component.html","./src/app/user/usersignup/usersignup.component.html","./src/app/shared/custom-validator.ts","./src/app/shared/validation-message.ts","./src/app/user/change-password/change-password.component.css","./src/app/user/change-password/change-password.component.ts","./src/app/user/edit-user/edit-user.component.css","./src/app/user/edit-user/edit-user.component.ts","./src/app/user/user-booking-service/user-booking-service.component.css","./src/app/user/user-booking-service/user-booking-service.component.ts","./src/app/user/user-dashboard/user-dashboard.component.css","./src/app/user/user-dashboard/user-dashboard.component.ts","./src/app/user/user-detailed-booking/user-detailed-booking.component.css","./src/app/user/user-detailed-booking/user-detailed-booking.component.ts","./src/app/user/user-header/user-header.component.css","./src/app/user/user-header/user-header.component.ts","./src/app/user/user-older-history/user-older-history.component.css","./src/app/user/user-older-history/user-older-history.component.ts","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/app/user/user.service.ts","./src/app/user/usersignin/usersignin.component.css","./src/app/user/usersignin/usersignin.component.ts","./src/app/user/usersignup/usersignup.component.css","./src/app/user/usersignup/usersignup.component.ts"],"names":[],"mappings":"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","file":"user-user-module-es2015.js","sourcesContent":["export default \"<app-user-header></app-user-header>\\n<div class=\\\"login-div margin-top-1vw col-md-3\\\">\\n    <h3 class=\\\"text-center\\\">\\n        <span class=\\\"badge badge-secondary \\\">Change Password</span>\\n    </h3>\\n    <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n    <div [formGroup]=\\\"changePassword\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"newPassword\\\">New Password</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter the password\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" formControlName=\\\"newPassword\\\"\\n                    [ngClass]=\\\"{error:changePassword.get('newPassword').invalid ||changePassword.controls.confirmPassword?.errors?.notEqual}\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"changePassword.get('newPassword').invalid &&changePassword.get('newPassword').touched\\\">*Required Field</span>\\n           \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"confirmPassword\\\">New Password</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter the password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\"\\n                    compareField=\\\"newPassword\\\" [ngClass]=\\\"{error:changePassword.get('confirmPassword').invalid &&changePassword.get('confirmPassword').touched}\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"changePassword.get('confirmPassword').invalid &&changePassword.get('confirmPassword').touched && !changePassword.get('confirmPassword').errors?.notEqual\\\">*Required Field</span>\\n            <br>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"changePassword.get('confirmPassword').errors &&changePassword.get('confirmPassword').errors.notEqual\\\">*New Password and confirm password are not equal</span>\\n        </div>\\n    </div>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"submit\\\" title=\\\"Please fill the required field to enable SignIn button\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"changeUserPassword(changePassword.value.confirmPassword,changePassword.value.newPassword)\\\">Save Password</button>\\n    </div>\\n\\n\\n</div>\"","export default \"<app-user-header></app-user-header>\\n\\n<div class=\\\"margin-top-1vw login-div\\\">\\n    <div [formGroup]=\\\"editProfile\\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Edit Profile</span>\\n        </h3>\\n\\n        <div *ngIf=\\\"successMesg\\\" class=\\\"success-message\\\">{{successMesg}}</div>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"form-group col-md-12\\\">\\n\\n            <div class=\\\" img-div user-profile-image position-relative\\\">\\n                <div class=\\\"img-div img-peview position-absolute\\\" *ngIf=\\\"imagePreview\\\">\\n                    <img [src]=\\\"imagePreview\\\">\\n                    <i class=\\\"fa fa-check font-size-small check-box \\\" aria-hidden=\\\"true\\\"></i>\\n\\n                    <i class=\\\"fa fa-times form-checkbox font-size-small check-box\\\" aria-hidden=\\\"true\\\"></i>\\n\\n                </div>\\n\\n                <div class=\\\"edit-img-position hover\\\" title=\\\"Click to edit pic\\\">\\n                    <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggleImgUpload()\\\">\\n\\n                    </i>\\n                    <div style=\\\"display:inline-block;position:absolute\\\">\\n                        <div>\\n                            <input *ngIf=\\\"uploadImg\\\" type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n\\n        <div class=\\\"modal-body row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"userName\\\">User Name</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('userName').invalid && editProfile.get('userName').touched} \\\"\\n                        id=\\\"userName\\\" [ngModel]=\\\"user.userName\\\" formControlName=\\\"userName\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('userName').invalid && editProfile.get('userName').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"mobileNo\\\" style=\\\"display:block\\\">Mobile Number</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" [ngModel]=\\\"user.mobileNo\\\" placeholder=\\\"Enter 10 digit mobile number\\\" class=\\\"form-control col-md-10\\\" [ngClass]=\\\"{error:editProfile.get('mobileNo').invalid && editProfile.get('mobileNo').touched }\\\"\\n                        id=\\\"mobileNo\\\" style=\\\"display:inline\\\" formControlName=\\\"mobileNo\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('mobileNo').invalid && editProfile.get('mobileNo').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"emailId\\\">Email</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Email Id\\\" [ngModel]=\\\"user.emailId\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('emailId').invalid&&editProfile.get('emailId').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"emailId\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('emailId').invalid&&editProfile.get('emailId').touched\\\">*Email is not in correct format</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"address\\\">Address</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <textarea type=\\\"text\\\" [ngModel]=\\\"user.address\\\" placeholder=\\\"Enter Address Details\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('address').invalid&&editProfile.get('address').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"address\\\"></textarea>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('address').invalid&&editProfile.get('address').touched\\\">*Required Field and 10digit</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"pinCode\\\">Pin Code</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" [ngModel]=\\\"user.pinCode\\\" placeholder=\\\"Enter Pin Code\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('pinCode').invalid&&editProfile.get('pinCode').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"pinCode\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('pinCode').invalid&&editProfile.get('pinCode').touched\\\">*Required Field and 6 digit</span>\\n            </div>\\n\\n        </div>\\n        <button type=\\\"submit\\\" title=\\\"Fill all the field to enable submit button\\\" class=\\\"btn btn-primary btn-space\\\" [disabled]=\\\"editProfile.invalid\\\"\\n            (click)=\\\"updateUser()\\\">Submit</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\n    </div>\\n</div>\"","export default \"<app-user-header></app-user-header>\\n<div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\"><i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i></div>\\n<div class=\\\"margin-top-1vw login-div\\\" *ngIf=\\\"!loadSpinner\\\">\\n    <div [formGroup]=\\\"bookingCarService\\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Booking for Wash/Maintainence</span>\\n        </h3>\\n\\n        <div *ngIf=\\\"successMesg\\\" class=\\\"success-message\\\">{{successMesg}}</div>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"modal-body row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileNo\\\">Vechile Number</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-id-card\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Vechile Number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('vechileNo').invalid&&bookingCarService.get('vechileNo').touched}\\\"\\n                        id=\\\"vechileNo\\\" formControlName=\\\"vechileNo\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('vechileNo').invalid&&bookingCarService.get('vechileNo').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileType\\\">Vechile Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-car\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select id=\\\"vechileType\\\" class=\\\"browser-default custom-select\\\" formControlName=\\\"vechileType\\\" [ngClass]=\\\"{error:bookingCarService.get('vechileType').invalid&&bookingCarService.get('vechileType').touched}\\\">\\n                        <!-- <option>Open this select menu</option> -->\\n                        <option value=\\\"hb\\\">Hatchback</option>\\n                        <option value=\\\"sd\\\">Sedan</option>\\n                        <option value=\\\"cv\\\">Convertible</option>\\n                    </select>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('vechileType').invalid&&bookingCarService.get('vechileType').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"ownerName\\\">Vechile Owner Name</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Owner Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('ownerName').invalid&&bookingCarService.get('ownerName').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"ownerName\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('ownerName').invalid&&bookingCarService.get('ownerName').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"mobileNo\\\">Mobile No</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Mobile Number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('mobileNo').invalid&&bookingCarService.get('mobileNo').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"mobileNo\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('mobileNo').invalid&&bookingCarService.get('mobileNo').touched\\\">*Required Field and 10digit</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceType\\\">Service Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-wrench\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select class=\\\"browser-default custom-select\\\" id=\\\"serviceType\\\" formControlName=\\\"serviceType\\\" [ngClass]=\\\"{error:bookingCarService.get('serviceType').invalid&&bookingCarService.get('serviceType').touched}\\\">\\n                        <!-- <option selected>Open this select menu</option> -->\\n                        <option value=\\\"fcs\\\">Full Car Service</option>\\n                        <option value=\\\"mcs\\\">Major Car Service</option>\\n                        <option value=\\\"ics\\\">Interim Car Service</option>\\n                    </select>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('serviceType').invalid&&bookingCarService.get('serviceType').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"requirement\\\">Requirement</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-list\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <textarea type=\\\"text\\\" placeholder=\\\"Enter the Requirement\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('requirement').invalid&&bookingCarService.get('requirement').touched}\\\"\\n                        id=\\\"requirement\\\" formControlName=\\\"requirement\\\"></textarea>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('requirement').invalid&&bookingCarService.get('requirement').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"budgetPrice\\\">Budget Price</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            ₹\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Amount\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('budgetPrice').invalid&&bookingCarService.get('budgetPrice').touched}\\\"\\n                        id=\\\"budgetPrice\\\" formControlName=\\\"budgetPrice\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('budgetPrice').invalid&&bookingCarService.get('budgetPrice').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"areaLocation\\\">Area Location</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Pickup Location\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('areaLocation').invalid&&bookingCarService.get('areaLocation').touched}\\\"\\n                        id=\\\"areaLocation\\\" formControlName=\\\"areaLocation\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('areaLocation').invalid&&bookingCarService.get('areaLocation').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceDate\\\">Service Date</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"date\\\" placeholder=\\\"Enter Pickup Location\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('serviceDate').invalid&&bookingCarService.get('serviceDate').touched}\\\"\\n                        id=\\\"serviceDate\\\" formControlName=\\\"serviceDate\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('serviceDate').invalid&&bookingCarService.get('serviceDate').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"custom-control custom-checkbox my-1 mr-sm-2 form-checkbox\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"pickUp\\\" formControlName=\\\"pickUp\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"pickUp\\\" (click)=\\\"flag==true?flag=false:flag=true\\\">Is PickUp Required?</label>\\n            </div>\\n        </div>\\n\\n        <div formGroupName=\\\"pickupDetail\\\">\\n            <div class=\\\"modal-body row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"pickLocation\\\">PickUp Location</label>\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                                <i class=\\\"fa fa-street-view\\\" aria-hidden=\\\"true\\\"></i>\\n                            </span>\\n                        </div>\\n                        <input type=\\\"text\\\" [readonly]=\\\"!flag\\\" placeholder=\\\"Enter Pickup Location\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('pickupDetail').get('pickLocation').invalid&&bookingCarService.get('pickupDetail').get('pickLocation').touched}\\\"\\n                            id=\\\"pickLocation\\\" formControlName=\\\"pickLocation\\\">\\n                    </div>\\n                    <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('pickupDetail').get('pickLocation').invalid&&bookingCarService.get('pickupDetail').get('pickLocation').touched\\\">*Required Field</span>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"pickupDate\\\">PickUP Date</label>\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                            </span>\\n                        </div>\\n                        <input type=\\\"date\\\" placeholder=\\\"Enter Pickup Location\\\" [readonly]=\\\"!flag\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('pickupDetail').get('pickupDate').invalid&&bookingCarService.get('pickupDetail').get('pickupDate').touched}\\\"\\n                            id=\\\"pickupDate\\\" formControlName=\\\"pickupDate\\\">\\n                    </div>\\n                    <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('pickupDetail').get('pickupDate').invalid&&bookingCarService.get('pickupDetail').get('pickupDate').touched\\\">*Required Field</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n        <button type=\\\"submit\\\" title=\\\"Fill all the field to enable submit button\\\" class=\\\"btn btn-primary btn-space\\\" [disabled]=\\\"bookingCarService.invalid\\\"\\n            (click)=\\\"submitBooking()\\\">Submit</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelBooking()\\\">Cancel</button>\\n\\n    </div>\\n</div>\"","export default \"<app-user-header></app-user-header>\\n\\n<div>\\n    <div class=\\\"margin-top-1vw login-div\\\">\\n        <h3 class=\\\"text-center\\\">\\n\\n            <span class=\\\"badge badge-secondary icon-medium\\\">\\n                <i class=\\\"fa fa-dashcube\\\" aria-hidden=\\\"true\\\"></i>\\n                User Dashboard</span>\\n        </h3>\\n        <div class=\\\"modal-body row\\\">\\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-success\\\" [routerLink]=\\\"['userBookingService']\\\" style=\\\"width: 18rem;\\\">\\n                <div class=\\\"card-body\\\">\\n\\n                    <h5 class=\\\"card-title text-center\\\" >\\n                        <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> Booking For Service</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-info\\\" style=\\\"width: 18rem;\\\" [routerLink]=\\\"['userBookingHistory']\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center\\\">\\n                        <i class=\\\"fa fa-history\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> View Older History</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n\\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-primary \\\" style=\\\"width: 18rem;\\\" [routerLink]=\\\"['userEdit']\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center\\\">\\n                        <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> User Profile</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-danger\\\" style=\\\"width: 18rem;\\\" [routerLink]=\\\"['changepassword']\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> Change Password</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<app-user-header></app-user-header>\\n<div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\">\\n    <i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i>\\n</div>\\n<div class=\\\"margin-top-1vw login-div\\\" *ngIf=\\\"!loadSpinner\\\">\\n    <div>\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Booking Detail for Vechile No.: \\\" {{serviceDetail.vechileNo}} \\\"</span>\\n        </h3>\\n        <div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\">\\n            <i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i>\\n        </div>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"modal-body row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileNo\\\">Vechile Number</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-id-card\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vechileNo\\\" [(ngModel)]=\\\"serviceDetail.vechileNo\\\">\\n                </div>\\n            </div>\\n            \\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileType\\\">Vechile Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-car\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select disabled id=\\\"vechileType\\\" class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"serviceDetail.vechileType\\\">\\n                        <option value=\\\"hb\\\">Hatchback</option>\\n                        <option value=\\\"sd\\\">Sedan</option>\\n                        <option value=\\\"cv\\\">Convertible</option>\\n                    </select>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"ownerName\\\">Vechile Owner Name</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firmName\\\" [(ngModel)]=\\\"serviceDetail.ownerName\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"mobileNo\\\">Mobile No</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firmName\\\" [(ngModel)]=\\\"serviceDetail.mobileNo\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceType\\\">Service Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-wrench\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select disabled class=\\\"browser-default custom-select\\\" id=\\\"serviceType\\\" [(ngModel)]=\\\"serviceDetail.serviceType\\\">\\n                        <option value=\\\"fcs\\\">Full Car Service</option>\\n                        <option value=\\\"mcs\\\">Major Car Service</option>\\n                        <option value=\\\"ics\\\">Interim Car Service</option>\\n                    </select>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"requirement\\\">Requirement</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-list\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <textarea readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"requirement\\\" [(ngModel)]=\\\"serviceDetail.requirement\\\"></textarea>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"budgetPrice\\\">Budget Price</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            ₹\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"budgetPrice\\\" [(ngModel)]=\\\"serviceDetail.budgetPrice\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"areaLocation\\\">Area Location</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"areaLocation\\\" [(ngModel)]=\\\"serviceDetail.areaLocation\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceDate\\\">Service Date</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"serviceDate\\\" [(ngModel)]=\\\"serviceDetail.serviceDate\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"modal-body row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"pickLocation\\\">PickUp Location</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-street-view\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pickLocation\\\" [(ngModel)]=\\\"serviceDetail.pickLocation\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"pickupDate\\\">PickUP Date</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"pickupDate\\\" [(ngModel)]=\\\"serviceDetail.pickupDate\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"deleteBoking()\\\">Delete</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelBooking()\\\">Cancel</button>\\n\\n    </div>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n    <a (click)=\\\"userDashboard()\\\" class=\\\"hover\\\"><i class=\\\"fa fa-dashcube\\\" aria-hidden=\\\"true\\\" style=\\\"color:aqua;font-size:3rem\\\"></i></a>\\n    <a class=\\\"text-fontFamily form-checkbox header-color\\\" style=\\\"color: #379f9f;\\\">Welcome : {{userLoggedIn|uppercase}}</a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\">\\n                <i title=\\\"User Profile\\\" class=\\\"fa fa-user icon-medium user-icon-color hover\\\" [ngClass]=\\\"{highlightIcon:status}\\\" (click)=\\\"showHideDiv()\\\"\\n                    aria-hidden=\\\"true\\\"></i>\\n            </a>\\n\\n            <div class=\\\"profile-menu\\\" [ngClass]=\\\"{toggleShowHideDiv:status}\\\">\\n                <button class=\\\"dropdown-item\\\" type=\\\"button\\\" [routerLink]=\\\"['userEdit']\\\" (click)=\\\"hideSelection()\\\">\\n                    <i class=\\\"fa fa-user-circle\\\" aria-hidden=\\\"true\\\"> Edit Profile</i>\\n\\n                </button>\\n                <button class=\\\"dropdown-item\\\" type=\\\"button\\\">\\n                        Option\\n    \\n                    </button>\\n\\n            </div>\\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link hover\\\">\\n                <i title=\\\"User Logout\\\" class=\\\"fa fa-sign-out icon-medium user-icon-color\\\" (click)=\\\"userLogout()\\\" aria-hidden=\\\"true\\\"></i>\\n            </a>\\n        </li>\\n    </ul>\\n</nav>\\n\"","export default \"<app-user-header></app-user-header>\\n<div>\\n    <div class=\\\"margin-top-1vw booking-history-div\\\">\\n        <h3 class=\\\"text-center col-md-12\\\">\\n\\n            <span class=\\\"badge badge-secondary icon-medium\\\">\\n                <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n                View All Older History</span>\\n        </h3>\\n        <div class=\\\"error-message\\\" *ngIf=\\\"errorMesg\\\">{{errorMesg}}</div>\\n        <div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\"><i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i></div>\\n        <div class=\\\"modal-body row\\\" *ngIf=\\\"!loadSpinner\\\">\\n            <div *ngFor=\\\"let eachBooking of allBookingHistory\\\"  class=\\\"card hover\\\" (click)=\\\"detailedBooking(eachBooking._id.$oid)\\\" style=\\\"width: 18rem;margin-left:2px\\\" id=\\\"{{eachBooking._id.$oid}}\\\">\\n                <div class=\\\"card-body text-left\\\" (click)=\\\"detailedBooking(eachBooking._id)\\\">\\n                    <b>Vechile No.:</b>{{eachBooking.vechileNo}}\\n                    <br>\\n                    <b>Service Date:</b>{{eachBooking.serviceDate|date:'dd/MM/yyyy'}}\\n                    <br>\\n                    <b>Pricing:</b>{{eachBooking.budgetPrice|currency:'INR'}}\\n                    <p class=\\\"card-text\\\"></p>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\"","export default \"<!-- <nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n        <div class=\\\"form-group\\\">\\n        <a routerLink=\\\"backhome\\\">\\n        <i class=\\\"fa fa-home font-size-medium\\\" title=\\\"Back to home page\\\"aria-hidden=\\\"true\\\"></i>        \\n        </a>\\n        </div>       \\n    \\n</nav> -->\\n<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"https://irp-cdn.multiscreensite.com/4787128b/dms3rep/multi/mobile/Car-Care-new-logo.png\\\" style=\\\"width:100px\\\">\\n    </a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"user\\\">Customer</a>\\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link hover\\\" (click)=\\\"serviceProviderSignIn()\\\">Service Provider</a>\\n        </li>\\n    </ul>\\n</nav>\\n<div [formGroup]=\\\"userLoginForm\\\">\\n    <div class=\\\"col-md-3 margin-top-1vw login-div\\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Customer Login Form</span>\\n        </h3>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"mobileNo\\\">Mobile Number</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter 10 digit mobile number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:userLoginForm.get('mobileNo').invalid&&userLoginForm.get('mobileNo').touched}\\\"\\n                    id=\\\"mobileNo\\\" formControlName=\\\"mobileNo\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"userLoginForm.get('mobileNo').invalid&&userLoginForm.get('mobileNo').touched\\\">*Required Field and 10digit</span>\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter the password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"userPassword\\\"\\n                    [ngClass]=\\\"{error:userLoginForm.get('userPassword').invalid &&userLoginForm.get('userPassword').touched}\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"userLoginForm.get('userPassword').invalid &&userLoginForm.get('userPassword').touched\\\">*Required Field</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gridCheck\\\" formControlName=\\\"rememberMe\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"gridCheck\\\">\\n                    Remember Me\\n                </label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"btn-toolbar\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"userLoginForm.invalid\\\" title=\\\"Please fill the required field to enable SignIn button\\\" class=\\\"btn btn-primary btn-space\\\"\\n                (click)=\\\"submitUser()\\\">Sign in</button>\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelSignIn()\\\">Cancel</button>\\n            <div *ngIf=\\\"loadSpinner\\\"><i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i></div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"btn-space\\\">Forget Password ?</label>\\n            <a routerLink=\\\"forgetPassword\\\">Click here</a>\\n            <br>\\n            <label class=\\\"btn-space\\\">To signup</label>\\n            <a routerLink=\\\"usersignup\\\">Click here</a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"https://irp-cdn.multiscreensite.com/4787128b/dms3rep/multi/mobile/Car-Care-new-logo.png\\\" style=\\\"width:100px\\\">\\n    </a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"user\\\">Customer</a>\\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link hover\\\" (click)=\\\"serviceProviderSignIn()\\\">Service Provider</a>\\n        </li>\\n    </ul>\\n</nav>\\n<div [formGroup]=\\\"userSignUp\\\">\\n    <div class=\\\"col-md-3 margin-top-1vw login-div \\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">User SignUP</span>\\n        </h3>\\n        <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"successMesg\\\" class=\\\"success-message\\\">{{successMesg}}</div>\\n            <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n            <label for=\\\"userName\\\">User Name</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Customer Name\\\" (blur)=\\\"logValidationError(userSignUp)\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'error':formErr.userName}\\\"\\n                    id=\\\"userName\\\" formControlName=\\\"userName\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"formErr.userName\\\">{{formErr.userName}}</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"mobileNo\\\" style=\\\"display:block\\\">Mobile Number</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter 10 digit mobile number\\\" (blur)=\\\"logValidationError(userSignUp)\\\" class=\\\"form-control col-md-10\\\"\\n                    [ngClass]=\\\"{error:formErr.mobileNo}\\\" id=\\\"mobileNo\\\" style=\\\"display:inline\\\" formControlName=\\\"mobileNo\\\">\\n            </div>\\n\\n            <span class=\\\"error-text\\\" *ngIf=\\\"formErr.mobileNo\\\">{{formErr.mobileNo}}</span>\\n\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"emailId\\\" style=\\\"display:block\\\">Email-Id</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter Email-Id\\\" (blur)=\\\"logValidationError(userSignUp)\\\" class=\\\"form-control col-md-10\\\"\\n                    [ngClass]=\\\"{error:formErr.emailId}\\\" id=\\\"mobileNo\\\" style=\\\"display:inline\\\" formControlName=\\\"emailId\\\">\\n            </div>\\n\\n            <span class=\\\"error-text\\\" *ngIf=\\\"formErr.emailId\\\">{{formErr.emailId}}</span>\\n\\n\\n        </div>\\n\\n        <div formGroupName=\\\"matchingPassword\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Enter Password</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"password\\\" [ngClass]=\\\"{error:formErr.password||userSignUp.controls.matchingPassword.controls.confirmPassword?.errors?.notEqual}\\\"\\n                        class=\\\"form-control\\\" id=\\\"password\\\" (blur)=\\\"logValidationError(userSignUp)\\\" placeholder=\\\"Please enter password\\\"\\n                        formControlName=\\\"password\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"formErr.password\\\">{{formErr.password}}</span>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"userSignUp.controls.matchingPassword.controls.confirmPassword?.errors?.notEqual\\\">*Password and confirm Password donot match</span>\\n\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:formErr.confirmPassword}\\\" compareField=\\\"password\\\" (blur)=\\\"logValidationError(userSignUp)\\\"\\n                        id=\\\"confirmPassword\\\" placeholder=\\\"Please confirm password\\\" formControlName=\\\"confirmPassword\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"formErr.confirmPassword\\\">{{formErr.confirmPassword}}</span>\\n\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" title=\\\"Fill all the field to enable submit button\\\" class=\\\"btn btn-primary btn-space\\\" [disabled]=\\\"userSignUp.invalid\\\"\\n            (click)=\\\"submitUser()\\\">Submit</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelSignIn()\\\">Cancel</button>\\n    </div>\\n</div>\"","import { AbstractControl} from '@angular/forms';\r\n\r\n\r\n\r\n \r\nexport class CustomValidator {\r\n\r\n    static numberValidation(control: AbstractControl) {\r\n        if (control.value.match(/\\D/)) {\r\n            return { ERROR: 'Not a number' }\r\n        }\r\n        return null;\r\n    };\r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n    const errorMessage = {\r\n        'userName':{\r\n            'required':\"User Name required \"\r\n        },\r\n        'mobileNo':{\r\n            'required':\"* Mobile Number required\",\r\n            'minlength':\"* Mobile Number should be of 10 digit\",\r\n            'maxlength':\"* Mobile Number should be of 10 digit\",\r\n            'pattern':\"* Mobile Number should be number\"\r\n        },        \r\n        \"password\":{\r\n            'required':\"Password is required\",\r\n            \r\n        },\r\n        \"confirmPassword\":{\r\n            'required':\"confirm Password is required\",\r\n            \"notEqual\":\"*Password and confirm Password donot match\"\r\n        },\r\n        \"emailId\":{\r\n            'required':\"Email-Id is required\",\r\n            \"email\":\"Emid-Id should should be format xyx@gmail.com\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const formErrors ={ \r\n        'userName':\"\",\r\n        'mobileNo':\"\",\r\n        'password':\"\",\r\n        'confirmPassword':\"\",\r\n        'emailId':\"\"\r\n\r\n    }\r\n\r\n    export const validationMessage ={ errorMessage,formErrors }\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css', '../../shared/shared.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePassword; errorMesg: String = \"\"\n\n  constructor(private formBuilder: FormBuilder,private databaseCall:DatabaseHttpCallService,private router:Router) { }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n    this.changePassword = this.formBuilder.group({\n      newPassword: [\"\", Validators.required],\n      confirmPassword: [\"\", Validators.required]\n    })\n  }\n\n  //this is a common line\n\n  changeUserPassword(firstValue, secondValue) {\n    try {\n      if (firstValue == secondValue) {\n        this.databaseCall.postData('changePassword',{\"userPassword\":secondValue}).subscribe(res=>this.router.navigate(['/user']),error=>{\n          if(error.error && error.error.err ){\n        this.errorMesg = error.error.err;\n      }\n        })\n      }\n      else {\n        this.errorMesg = \"New Password and Confirm Password donot match\"\n      }\n\n    }\n    catch (error) {\n      console.log(\"error.error.err\");\n      // if(error.error && error.error.err ){\n      //   this.errorMesg = error.error.err;\n      // }\n    }\n\n  }\n\n}\n","export default \".user-profile-image{\\r\\n    text-align: center;    \\r\\n    margin-left: 39%;\\r\\n    border:1px solid black\\r\\n}\\r\\n\\r\\n.edit-img-position{\\r\\n    right: 0px;    \\r\\n    top: 0px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.img-peview{\\r\\n    margin: 0 auto; \\r\\n    border:2px solid black\\r\\n}\\r\\n\\r\\n.img-peview img{\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    border-radius:50%\\r\\n}\\r\\n\\r\\n.img-div{\\r\\n    width: 10vw;    \\r\\n    height: 10vw;  \\r\\n    border-radius: 50%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9lZGl0LXVzZXIvZWRpdC11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCO0FBQ0o7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsUUFBUTtJQUNSLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZDtBQUNKOztBQUNBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWDtBQUNKOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC91c2VyL2VkaXQtdXNlci9lZGl0LXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLXByb2ZpbGUtaW1hZ2V7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICAgIFxyXG4gICAgbWFyZ2luLWxlZnQ6IDM5JTtcclxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2tcclxufVxyXG5cclxuLmVkaXQtaW1nLXBvc2l0aW9ue1xyXG4gICAgcmlnaHQ6IDBweDsgICAgXHJcbiAgICB0b3A6IDBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLmltZy1wZXZpZXd7XHJcbiAgICBtYXJnaW46IDAgYXV0bzsgXHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIGJsYWNrXHJcbn1cclxuLmltZy1wZXZpZXcgaW1ne1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDoxMDAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czo1MCVcclxufVxyXG5cclxuLmltZy1kaXZ7XHJcbiAgICB3aWR0aDogMTB2dzsgICAgXHJcbiAgICBoZWlnaHQ6IDEwdnc7ICBcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css', '../../shared/shared.css']\n})\nexport class EditUserComponent implements OnInit {\n  successMesg:String; errorMesg:String; editProfile ;uploadImg:boolean=false;imagePreview;\n\n  user = {\n    userName: \"\",\n    mobileNo: \"\",\n    emailId: \"\",\n    address: \"\",\n    pinCode: \"\"\n  }\n  constructor(public formBuilder: FormBuilder, public databaseCall: DatabaseHttpCallService, private router: Router) {}\n\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n    this.databaseCall.getData('userData').subscribe((res: any) => {\n      this.user.userName = res.data.userName\n      this.user.mobileNo = res.data.mobileNo\n      this.user.emailId = res.data.emailId\n      this.user.address = res.data.address\n      this.user.pinCode = res.data.pinCode\n    }, error => {\n      this.router.navigate([\"/user\"]);\n      // console.log(error)\n    });\n\n    this.editProfile = this.formBuilder.group({\n      userName: [{ value: \"\", key1: \"riteshkumar\" }],\n      mobileNo: [{ value: '', disabled: true }],\n      emailId: ['', Validators.email],\n      address: [],\n      pinCode: ['', [Validators.minLength(6), Validators.maxLength(6), Validators.pattern('[0-9]*')]]\n    })\n\n\n  }\n\n  updateUser() {\n    let controls = this.editProfile.controls;\n    let toUpdateField: any = {};\n    for (let e in controls) {\n      if (controls[e].dirty) {\n        toUpdateField[e] = controls[e].value;\n      }\n    }\n    if (Object.entries(toUpdateField).length > 0) {\n      this.databaseCall.postData('userupdate', toUpdateField).subscribe(res => console.log(res));\n    }\n    else{\n      this.errorMesg=\"There is no change in user profile\";\n    }\n\n  }\n\n  cancelEdit() {\n    this.router.navigate([\"/user/userdashboard\"])\n  }\n\n  selectFile(event:Event){\n    let fileSelected = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = ()=>{\n      this.imagePreview = reader.result\n      console.log(this.imagePreview)\n    }\n\n    reader.readAsDataURL(fileSelected)\n\n  }\n\n  toggleImgUpload(){\n    this.uploadImg=!this.uploadImg;\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1ib29raW5nLXNlcnZpY2UvdXNlci1ib29raW5nLXNlcnZpY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from 'selenium-webdriver/http';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-booking-service',\n  templateUrl: './user-booking-service.component.html',\n  styleUrls: ['./user-booking-service.component.css', '../../shared/shared.css']\n})\nexport class UserBookingServiceComponent implements OnInit {\n  bookingCarService; presentDate = new Date();flag\n  successMesg; errorMesg;\n  requiredField = \"* Required Field\";\n  pickupRequired:boolean;\n  loadSpinner:boolean=false;\n  // pickupRequire = this.bookingCarService.get(\"pickUp\").value\n\n  constructor(public formBuilder: FormBuilder, public databaseCall: DatabaseHttpCallService,public router:Router) {\n    this.bookingCarService = this.formBuilder.group({\n      vechileNo: ['', Validators.required],\n      vechileType: ['', Validators.required],\n      ownerName: ['', Validators.required],\n      mobileNo: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[0-9]*')]],\n      serviceType: ['', Validators.required],\n      requirement: ['', Validators.required],\n      budgetPrice: ['', Validators.required],\n      areaLocation: ['', Validators.required],\n      serviceDate: [this.presentDate, Validators.required],\n      pickUp: [''],\n      pickupDetail: this.formBuilder.group({\n        pickLocation: [''],\n        pickupDate: [''],\n      }),\n    })\n  }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n  }\n\n  submitBooking() {\n    this.loadSpinner=true;\n    this.databaseCall.postData('user-car-booking', this.bookingCarService.value).subscribe(res => {\n      this.loadSpinner=false;\n      this.errorMesg = \"\";\n      this.successMesg = `Booking has been saved`;\n      this.bookingCarService.reset();\n      \n    },\n      error => {\n        this.loadSpinner=false;\n        this.successMesg = \"\";\n        this.errorMesg = \"Please try again after sometime as couldnot connect to database\"\n      }\n    )\n  }\n\n  cancelBooking() {\n    this.router.navigate([\"/user/userdashboard\"])\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1kYXNoYm9hcmQvdXNlci1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css', '../../shared/shared.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n\n  constructor(private databaseCall: DatabaseHttpCallService, private router: Router) {\n    \n\n  }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1kZXRhaWxlZC1ib29raW5nL3VzZXItZGV0YWlsZWQtYm9va2luZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-detailed-booking',\n  templateUrl: './user-detailed-booking.component.html',\n  styleUrls: ['./user-detailed-booking.component.css', '../../shared/shared.css']\n})\nexport class UserDetailedBookingComponent implements OnInit {\n  \n  presentDate: any; vechileRegistered; loadSpinner: boolean = false; objectId: String = \"\"; errorMesg: String = \"\"\n  serviceDetail = {\n    vechileNo: \"\",\n    vechileType: \"\",\n    ownerName: \"\",\n    serviceType: \"\",\n    requirement: \"\",\n    budgetPrice: \"\",\n    areaLocation: \"\",\n    serviceDate: \"\",\n    pickLocation: \"\",\n    pickupDate: \"\",\n    mobileNo: \"\"\n  }\n\n  constructor(public databaseCall: DatabaseHttpCallService, public router: Router, private activeRoute: ActivatedRoute) {\n\n\n  }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n    this.loadSpinner = true;\n    this.activeRoute.queryParams.subscribe(res => {\n      this.databaseCall.getData('bookingById', res).subscribe((res: any) => {\n        console.log(res._id)\n        this.loadSpinner = false;\n        this.objectId = res._id;\n        this.serviceDetail.vechileNo = res.vechileNo;\n        this.serviceDetail.vechileType = res.vechileType;\n        this.serviceDetail.ownerName = res.ownerName;\n        this.serviceDetail.serviceType = res.serviceType;\n        this.serviceDetail.requirement = res.requirement;\n        this.serviceDetail.budgetPrice = res.budgetPrice;\n        this.serviceDetail.mobileNo = res.mobileNo\n        this.serviceDetail.areaLocation = res.areaLocation;\n        this.serviceDetail.serviceDate = res.serviceDate;\n        this.serviceDetail.pickLocation = res.pickupDetail.pickLocation;\n        this.serviceDetail.pickLocation = res.pickupDetail.pickLocation;\n      })\n    })\n  }\n\n  deleteBoking() {\n    if (confirm(\"Are you sure to delete \")) {\n      this.databaseCall.deleteById('deleteuserbooking', { _id: this.objectId }).subscribe(res => {\n        this.router.navigate(['/user/userdashboard/userBookingHistory'])\n\n      }),\n        error => {\n          if (error.error) {\n            if (error.error.err) {\n              this.errorMesg = error.error.err;\n            }\n          }\n          else\n            this.errorMesg = \"Technical Error...Contact service provider\"\n        }\n\n    }\n\n  }\n  cancelBooking() {\n    this.router.navigate(['/user/userdashboard'])\n  }\n\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1oZWFkZXIvdXNlci1oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\n\n@Component({\n  selector: 'app-user-header',\n  templateUrl: './user-header.component.html',\n  styleUrls: ['./user-header.component.css', '../../shared/shared.css']\n})\nexport class UserHeaderComponent implements OnInit {\n  userLoggedIn;\n  status: boolean = false;\n\n  constructor(private router: Router, private databaseCall: DatabaseHttpCallService) {\n    this.userLoggedIn = localStorage.getItem(\"userName\")\n  }\n\n  ngOnInit() {\n  }\n\n  userDashboard() {\n    this.router.navigate([\"user/userdashboard\"])\n  }\n\n  showHideDiv() {\n    this.status = !this.status;\n  }\n  hideSelection() {\n    this.status = false;\n    this.router.navigate([\"user/userdashboard/userEdit\"])\n  }\n\n  userLogout() {\n\n    this.databaseCall.updateDocument('logout').subscribe(response => {\n      localStorage.clear();\n      this.router.navigate([\"/user\"]);\n    }\n      , error => console.log(error))\n\n  }\n}\n","export default \".booking-history-div{\\r\\n    text-align: center;\\r\\n    display:inline-block;\\r\\n    border: 2px solid black;\\r\\n    width: 80%;\\r\\n    border-radius:10px;\\r\\n    box-shadow: 7px 10px #888;\\r\\n    height:70%;\\r\\n    margin-left:10%;\\r\\n    margin-right:10%;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLW9sZGVyLWhpc3RvcnkvdXNlci1vbGRlci1oaXN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLHVCQUF1QjtJQUN2QixVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixVQUFVO0lBQ1YsZUFBZTtJQUNmLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC91c2VyL3VzZXItb2xkZXItaGlzdG9yeS91c2VyLW9sZGVyLWhpc3RvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib29raW5nLWhpc3RvcnktZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBib3JkZXItcmFkaXVzOjEwcHg7XHJcbiAgICBib3gtc2hhZG93OiA3cHggMTBweCAjODg4O1xyXG4gICAgaGVpZ2h0OjcwJTtcclxuICAgIG1hcmdpbi1sZWZ0OjEwJTtcclxuICAgIG1hcmdpbi1yaWdodDoxMCU7XHJcblxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-older-history',\n  templateUrl: './user-older-history.component.html',\n  styleUrls: ['./user-older-history.component.css','../../shared/shared.css']\n})\nexport class UserOlderHistoryComponent implements OnInit {\n  allBookingHistory;loadSpinner:boolean=false;errorMesg:String;\n\n  constructor(public databaseCall:DatabaseHttpCallService,private router:Router) { }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n\n\n    this.loadSpinner=true;\n    this.databaseCall.getData('usercarbookinghistory').subscribe((res:any)=>\n    {\n      this.loadSpinner=false;\n      this.allBookingHistory=res.data;\n    },error=>{\n      this.loadSpinner=false;\n      if (error.error) {\n        if (error.error.err) {\n          this.errorMesg = \"User Id and Password doesnot match\"\n        }\n      }\n      else\n        this.errorMesg = \"Technical Error...Contact service provider\"\n\n    })\n  }\n\n  showBookingHistory(){\n    console.log(this.allBookingHistory)\n  }\n\n  detailedBooking(id){\n    if(id){\n      this.router.navigate(['/user/userdashboard/eachbookinghistory'],{queryParams:{_id:id}})\n    }\n    // this.databaseCall.getData()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersigninComponent } from 'src/app/user/usersignin/usersignin.component';\nimport { UsersignupComponent } from 'src/app/user/usersignup/usersignup.component';\nimport { ForgetpasswordComponent } from 'src/app/shared/forgetpassword/forgetpassword.component';\nimport { UserDashboardComponent } from 'src/app/user/user-dashboard/user-dashboard.component';\nimport { UserBookingServiceComponent } from 'src/app/user/user-booking-service/user-booking-service.component';\nimport { UserOlderHistoryComponent } from 'src/app/user/user-older-history/user-older-history.component';\nimport { EditUserComponent } from 'src/app/user/edit-user/edit-user.component';\nimport { UserDetailedBookingComponent } from 'src/app/user/user-detailed-booking/user-detailed-booking.component';\nimport { ChangePasswordComponent } from 'src/app/user/change-password/change-password.component';\n\n//home route is \"user\"\nconst routes: Routes = [\n  {\n    path:'',\n    component:UsersigninComponent\n  },\n  {\n    path:'usersignup',\n    component:UsersignupComponent\n  },\n  {\n    path:'forgetPassword',\n    component:ForgetpasswordComponent\n  },\n  {\n    path:\"backhome\",\n    redirectTo:\"/\",\n    pathMatch:'full'\n    \n  },\n  {\n    path:\"usersignup/backlogin\",\n    redirectTo:\"\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"user\",\n    redirectTo:\"\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"usersignup/user\",\n    redirectTo:\"\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"userdashboard\",\n    component:UserDashboardComponent\n  },\n  {\n    path:'userdashboard/userBookingService',\n    component:UserBookingServiceComponent\n  },\n  {\n    path:'userdashboard/userBookingHistory',\n    component:UserOlderHistoryComponent\n  },\n  {\n    path:'userdashboard/userEdit',\n    component:EditUserComponent\n  },\n  {\n    path:'userdashboard/userEdit/userEdit',\n    redirectTo:\"userdashboard/userEdit\",\n    pathMatch:\"full\"\n  },\n  {\n    path:'userdashboard/eachbookinghistory',\n    component:UserDetailedBookingComponent\n  },\n  {\n    path:'userdashboard/changepassword',\n    component:ChangePasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UsersigninComponent } from './usersignin/usersignin.component';\nimport { UsersignupComponent } from './usersignup/usersignup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { UserBookingServiceComponent } from './user-booking-service/user-booking-service.component';\nimport { UserHeaderComponent } from './user-header/user-header.component';\nimport { UserOlderHistoryComponent } from './user-older-history/user-older-history.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { UserService } from 'src/app/user/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserDetailedBookingComponent } from './user-detailed-booking/user-detailed-booking.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\n\n\n\n\n@NgModule({\n  declarations: [UsersigninComponent, UsersignupComponent, UserDashboardComponent, UserBookingServiceComponent, UserHeaderComponent, UserOlderHistoryComponent, EditUserComponent, UserDetailedBookingComponent, ChangePasswordComponent],\n  imports: [\n    CommonModule,FormsModule,\n    UserRoutingModule,FormsModule,ReactiveFormsModule,SharedModule,HttpClientModule\n  ],\n  providers:[UserService]\n})\nexport class UserModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(public router:Router,private databaseCall:DatabaseHttpCallService) { }\n  \n  serviceProviderSignIn(){\n    this.router.navigate(['/serviceprovider'])\n  }\n\n\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlcnNpZ25pbi91c2Vyc2lnbmluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CustomValidator } from '../../shared/custom-validator';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\n\n\n@Component({\n  selector: 'app-usersignin',\n  templateUrl: './usersignin.component.html',\n  styleUrls: ['./usersignin.component.css', '../../shared/shared.css']\n})\nexport class UsersigninComponent implements OnInit {\n\n  userLoginForm; errorMesg; userLoggedIn; loadSpinner: boolean = false;\n\n  constructor(public formBuilder: FormBuilder, public router: Router, public userservice: UserService, public databaseCall: DatabaseHttpCallService) {\n    this.userLoginForm = formBuilder.group({\n      mobileNo: [\"\", [Validators.required, Validators.minLength(10), Validators.maxLength(10), CustomValidator.numberValidation]],\n      userPassword: [\"\", [Validators.required]],\n      rememberMe: [true],\n\n    });\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"user_id\")) {\n      this.router.navigate([\"/user/userdashboard\"]);\n    }\n\n  }\n\n  serviceProviderSignIn() {\n    this.userservice.serviceProviderSignIn()\n  }\n\n  // mobileNumberValidation(inputField) {\n  //   if (inputField.value.match(/\\D/)) {\n  //     return { ERROR: 'Not a number' }\n  //   }\n  //   return null;\n\n  // }\n\n  submitUser() {\n    this.errorMesg = \"\";\n    let searchParam = { \"userId\": this.userLoginForm.value.mobileNo, \"password\": this.userLoginForm.value.userPassword };\n    this.loadSpinner = true;\n    this.databaseCall.postData('usersignin', searchParam).subscribe((res: any) => {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('user_id', res.user._id);\n      localStorage.setItem('userName', res.user.userName)\n\n      this.router.navigate([\"/user/userdashboard\"]);\n    }, error => {\n      this.loadSpinner = false;\n      if (error.error) {\n        if (error.error.err) {\n          this.errorMesg = \"User Id and Password doesnot match\"\n        }\n      }\n      else\n        this.errorMesg = \"Technical Error...Contact service provider\"\n\n    })\n\n  }\n\n  cancelSignIn() {\n    this.router.navigate([\"/\"])\n  }\n\n  ngOnInit() {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlcnNpZ251cC91c2Vyc2lnbnVwLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Directive, Input } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, AbstractControl, FormControl, FormArray } from '@angular/forms';\nimport { CustomValidator } from '../../shared/custom-validator';\nimport { validationMessage } from 'src/app/shared/validation-message'\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { DatabaseHttpCallService } from '../../shared/database-http-call.service'\nimport { error } from 'selenium-webdriver';\n\n\n\n@Component({\n  selector: 'app-usersignup',\n  templateUrl: './usersignup.component.html',\n  styleUrls: ['./usersignup.component.css', '../../shared/shared.css']\n})\n\n\nexport class UsersignupComponent implements OnInit {\n  userSignUp; passwordDisabled = false; successMesg; errorMesg\n  matchingPassword;\n  validationMsg = validationMessage.errorMessage;\n  formErr = validationMessage.formErrors;\n\n\n  constructor(public formBuilder: FormBuilder, public router: Router, public userservice: UserService, public databaseCall: DatabaseHttpCallService) {\n    this.userSignUp = this.formBuilder.group({\n      userName: [\"\", [Validators.required]],\n      mobileNo: [\"\", [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[0-9]*')]],\n      emailId:[\"\",[Validators.required,Validators.email]],\n      matchingPassword: this.formBuilder.group({\n        password: [\"\", [Validators.required]],\n        confirmPassword: [\"\", [Validators.required]],\n      })\n\n    }\n    );\n    this.userSignUp.valueChanges.subscribe(e => this.logValidationError(this.userSignUp))\n\n  }\n\n\n\n  ngOnInit() {\n  }\n\n  get confirmPassword() {\n    return this.userSignUp.get('confirmPassword');\n  }\n\n\n\n\n  logValidationError(formgroup: FormGroup) {\n    Object.keys(formgroup.controls).forEach((eachControl: string) => {\n      const abstrachControl = formgroup.get(eachControl);\n      if (abstrachControl instanceof FormGroup) {\n        this.logValidationError(abstrachControl)\n      }\n      else {\n        this.formErr[eachControl] = \"\";\n        if (abstrachControl && !abstrachControl.valid && (abstrachControl.touched || abstrachControl.dirty)) {\n          const message = this.validationMsg[eachControl]\n          for (const errorKey in abstrachControl.errors) {\n            if (errorKey) {\n              this.formErr[eachControl] += message[errorKey] + ' ';\n            }\n          }\n        }\n      }\n    })\n  }\n\n  serviceProviderSignIn() {\n    this.userservice.serviceProviderSignIn();\n  }\n\n  res\n\n  submitUser() {\n    this.successMesg = \"\";\n    this.databaseCall.postData('usersignup', this.userSignUp.value).subscribe((res: any) => {\n      this.errorMesg = \"\";\n      this.successMesg = \"\";\n\n      if (res.msg) {\n        this.successMesg = res.msg;\n        this.userSignUp.reset();\n\n      }\n      else {\n        this.errorMesg = \"Mobile is already registered\"\n      }\n\n    }, (error) => {\n      this.errorMesg = \"\";\n      error.error && error.error.err ? this.errorMesg = error.error.err : \"Contact Administrator\";\n    }\n\n    )\n\n  }\n\n  cancelSignIn() {\n    this.router.navigate([\"/user\"])\n  }\n\n}\n"],"sourceRoot":"webpack:///"}