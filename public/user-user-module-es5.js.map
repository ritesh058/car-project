{"version":3,"sources":["src/app/user/change-password/change-password.component.html","src/app/user/edit-user/edit-user.component.html","src/app/user/user-booking-service/user-booking-service.component.html","src/app/user/user-dashboard/user-dashboard.component.html","src/app/user/user-detailed-booking/user-detailed-booking.component.html","src/app/user/user-header/user-header.component.html","src/app/user/user-older-history/user-older-history.component.html","src/app/user/usersignin/usersignin.component.html","src/app/user/usersignup/usersignup.component.html","src/app/shared/custom-validator.ts","src/app/shared/validation-message.ts","src/app/user/change-password/change-password.component.css","src/app/user/change-password/change-password.component.ts","src/app/user/edit-user/edit-user.component.css","src/app/user/edit-user/edit-user.component.ts","src/app/user/user-booking-service/user-booking-service.component.css","src/app/user/user-booking-service/user-booking-service.component.ts","src/app/user/user-dashboard/user-dashboard.component.css","src/app/user/user-dashboard/user-dashboard.component.ts","src/app/user/user-detailed-booking/user-detailed-booking.component.css","src/app/user/user-detailed-booking/user-detailed-booking.component.ts","src/app/user/user-header/user-header.component.css","src/app/user/user-header/user-header.component.ts","src/app/user/user-older-history/user-older-history.component.css","src/app/user/user-older-history/user-older-history.component.ts","src/app/user/user-routing.module.ts","src/app/user/user.module.ts","src/app/user/user.service.ts","src/app/user/usersignin/usersignin.component.css","src/app/user/usersignin/usersignin.component.ts","src/app/user/usersignup/usersignup.component.css","src/app/user/usersignup/usersignup.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-user-header></app-user-header>\\n<div class=\\\"login-div margin-top-1vw col-md-3\\\">\\n    <h3 class=\\\"text-center\\\">\\n        <span class=\\\"badge badge-secondary \\\">Change Password</span>\\n    </h3>\\n    <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n    <div [formGroup]=\\\"changePassword\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"newPassword\\\">New Password</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter the password\\\" class=\\\"form-control\\\" id=\\\"newPassword\\\" formControlName=\\\"newPassword\\\"\\n                    [ngClass]=\\\"{error:changePassword.get('newPassword').invalid ||changePassword.controls.confirmPassword?.errors?.notEqual}\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"changePassword.get('newPassword').invalid &&changePassword.get('newPassword').touched\\\">*Required Field</span>\\n           \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"confirmPassword\\\">New Password</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter the password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\"\\n                    compareField=\\\"newPassword\\\" [ngClass]=\\\"{error:changePassword.get('confirmPassword').invalid &&changePassword.get('confirmPassword').touched}\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"changePassword.get('confirmPassword').invalid &&changePassword.get('confirmPassword').touched && !changePassword.get('confirmPassword').errors?.notEqual\\\">*Required Field</span>\\n            <br>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"changePassword.get('confirmPassword').errors &&changePassword.get('confirmPassword').errors.notEqual\\\">*New Password and confirm password are not equal</span>\\n        </div>\\n    </div>\\n    <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"submit\\\" title=\\\"Please fill the required field to enable SignIn button\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"changeUserPassword(changePassword.value.confirmPassword,changePassword.value.newPassword)\\\">Save Password</button>\\n    </div>\\n\\n\\n</div>\"","export default \"<app-user-header></app-user-header>\\n\\n<div class=\\\"margin-top-1vw login-div\\\">\\n    <div [formGroup]=\\\"editProfile\\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Edit Profile</span>\\n        </h3>\\n\\n        <div *ngIf=\\\"successMesg\\\" class=\\\"success-message\\\">{{successMesg}}</div>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"form-group col-md-12\\\">\\n\\n            <div class=\\\" img-div user-profile-image position-relative\\\">\\n                <div class=\\\"img-div img-peview position-absolute\\\" *ngIf=\\\"imagePreview\\\">\\n                    <img [src]=\\\"imagePreview\\\">\\n                    <i class=\\\"fa fa-check font-size-small check-box \\\" aria-hidden=\\\"true\\\"></i>\\n\\n                    <i class=\\\"fa fa-times form-checkbox font-size-small check-box\\\" aria-hidden=\\\"true\\\"></i>\\n\\n                </div>\\n\\n                <div class=\\\"edit-img-position hover\\\" title=\\\"Click to edit pic\\\">\\n                    <i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\" (click)=\\\"toggleImgUpload()\\\">\\n\\n                    </i>\\n                    <div style=\\\"display:inline-block;position:absolute\\\">\\n                        <div>\\n                            <input *ngIf=\\\"uploadImg\\\" type=\\\"file\\\" (change)=\\\"selectFile($event)\\\">\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\\n\\n\\n        <div class=\\\"modal-body row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"userName\\\">User Name</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('userName').invalid && editProfile.get('userName').touched} \\\"\\n                        id=\\\"userName\\\" [ngModel]=\\\"user.userName\\\" formControlName=\\\"userName\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('userName').invalid && editProfile.get('userName').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"mobileNo\\\" style=\\\"display:block\\\">Mobile Number</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" [ngModel]=\\\"user.mobileNo\\\" placeholder=\\\"Enter 10 digit mobile number\\\" class=\\\"form-control col-md-10\\\" [ngClass]=\\\"{error:editProfile.get('mobileNo').invalid && editProfile.get('mobileNo').touched }\\\"\\n                        id=\\\"mobileNo\\\" style=\\\"display:inline\\\" formControlName=\\\"mobileNo\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('mobileNo').invalid && editProfile.get('mobileNo').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"emailId\\\">Email</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Email Id\\\" [ngModel]=\\\"user.emailId\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('emailId').invalid&&editProfile.get('emailId').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"emailId\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('emailId').invalid&&editProfile.get('emailId').touched\\\">*Email is not in correct format</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"address\\\">Address</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <textarea type=\\\"text\\\" [ngModel]=\\\"user.address\\\" placeholder=\\\"Enter Address Details\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('address').invalid&&editProfile.get('address').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"address\\\"></textarea>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('address').invalid&&editProfile.get('address').touched\\\">*Required Field and 10digit</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"pinCode\\\">Pin Code</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" [ngModel]=\\\"user.pinCode\\\" placeholder=\\\"Enter Pin Code\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:editProfile.get('pinCode').invalid&&editProfile.get('pinCode').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"pinCode\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"editProfile.get('pinCode').invalid&&editProfile.get('pinCode').touched\\\">*Required Field and 6 digit</span>\\n            </div>\\n\\n        </div>\\n        <button type=\\\"submit\\\" title=\\\"Fill all the field to enable submit button\\\" class=\\\"btn btn-primary btn-space\\\" [disabled]=\\\"editProfile.invalid\\\"\\n            (click)=\\\"updateUser()\\\">Submit</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\n    </div>\\n</div>\"","export default \"<app-user-header></app-user-header>\\n<div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\"><i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i></div>\\n<div class=\\\"margin-top-1vw login-div\\\" *ngIf=\\\"!loadSpinner\\\">\\n    <div [formGroup]=\\\"bookingCarService\\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Booking for Wash/Maintainence</span>\\n        </h3>\\n\\n        <div *ngIf=\\\"successMesg\\\" class=\\\"success-message\\\">{{successMesg}}</div>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"modal-body row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileNo\\\">Vechile Number</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-id-card\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Vechile Number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('vechileNo').invalid&&bookingCarService.get('vechileNo').touched}\\\"\\n                        id=\\\"vechileNo\\\" formControlName=\\\"vechileNo\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('vechileNo').invalid&&bookingCarService.get('vechileNo').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileType\\\">Vechile Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-car\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select id=\\\"vechileType\\\" class=\\\"browser-default custom-select\\\" formControlName=\\\"vechileType\\\" [ngClass]=\\\"{error:bookingCarService.get('vechileType').invalid&&bookingCarService.get('vechileType').touched}\\\">\\n                        <!-- <option>Open this select menu</option> -->\\n                        <option value=\\\"hb\\\">Hatchback</option>\\n                        <option value=\\\"sd\\\">Sedan</option>\\n                        <option value=\\\"cv\\\">Convertible</option>\\n                    </select>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('vechileType').invalid&&bookingCarService.get('vechileType').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"ownerName\\\">Vechile Owner Name</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Owner Name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('ownerName').invalid&&bookingCarService.get('ownerName').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"ownerName\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('ownerName').invalid&&bookingCarService.get('ownerName').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"mobileNo\\\">Mobile No</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Mobile Number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('mobileNo').invalid&&bookingCarService.get('mobileNo').touched}\\\"\\n                        id=\\\"firmName\\\" formControlName=\\\"mobileNo\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('mobileNo').invalid&&bookingCarService.get('mobileNo').touched\\\">*Required Field and 10digit</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceType\\\">Service Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-wrench\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select class=\\\"browser-default custom-select\\\" id=\\\"serviceType\\\" formControlName=\\\"serviceType\\\" [ngClass]=\\\"{error:bookingCarService.get('serviceType').invalid&&bookingCarService.get('serviceType').touched}\\\">\\n                        <!-- <option selected>Open this select menu</option> -->\\n                        <option value=\\\"fcs\\\">Full Car Service</option>\\n                        <option value=\\\"mcs\\\">Major Car Service</option>\\n                        <option value=\\\"ics\\\">Interim Car Service</option>\\n                    </select>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('serviceType').invalid&&bookingCarService.get('serviceType').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"requirement\\\">Requirement</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-list\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <textarea type=\\\"text\\\" placeholder=\\\"Enter the Requirement\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('requirement').invalid&&bookingCarService.get('requirement').touched}\\\"\\n                        id=\\\"requirement\\\" formControlName=\\\"requirement\\\"></textarea>\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('requirement').invalid&&bookingCarService.get('requirement').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"budgetPrice\\\">Budget Price</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            ₹\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Amount\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('budgetPrice').invalid&&bookingCarService.get('budgetPrice').touched}\\\"\\n                        id=\\\"budgetPrice\\\" formControlName=\\\"budgetPrice\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('budgetPrice').invalid&&bookingCarService.get('budgetPrice').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"areaLocation\\\">Area Location</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Pickup Location\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('areaLocation').invalid&&bookingCarService.get('areaLocation').touched}\\\"\\n                        id=\\\"areaLocation\\\" formControlName=\\\"areaLocation\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('areaLocation').invalid&&bookingCarService.get('areaLocation').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceDate\\\">Service Date</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"date\\\" placeholder=\\\"Enter Pickup Location\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('serviceDate').invalid&&bookingCarService.get('serviceDate').touched}\\\"\\n                        id=\\\"serviceDate\\\" formControlName=\\\"serviceDate\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('serviceDate').invalid&&bookingCarService.get('serviceDate').touched\\\">*Required Field</span>\\n            </div>\\n\\n            <div class=\\\"custom-control custom-checkbox my-1 mr-sm-2 form-checkbox\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"pickUp\\\" formControlName=\\\"pickUp\\\">\\n                <label class=\\\"custom-control-label\\\" for=\\\"pickUp\\\" (click)=\\\"flag==true?flag=false:flag=true\\\">Is PickUp Required?</label>\\n            </div>\\n        </div>\\n\\n        <div formGroupName=\\\"pickupDetail\\\">\\n            <div class=\\\"modal-body row\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"pickLocation\\\">PickUp Location</label>\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                                <i class=\\\"fa fa-street-view\\\" aria-hidden=\\\"true\\\"></i>\\n                            </span>\\n                        </div>\\n                        <input type=\\\"text\\\" [readonly]=\\\"!flag\\\" placeholder=\\\"Enter Pickup Location\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('pickupDetail').get('pickLocation').invalid&&bookingCarService.get('pickupDetail').get('pickLocation').touched}\\\"\\n                            id=\\\"pickLocation\\\" formControlName=\\\"pickLocation\\\">\\n                    </div>\\n                    <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('pickupDetail').get('pickLocation').invalid&&bookingCarService.get('pickupDetail').get('pickLocation').touched\\\">*Required Field</span>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"pickupDate\\\">PickUP Date</label>\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <div class=\\\"input-group-prepend\\\">\\n                            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                            </span>\\n                        </div>\\n                        <input type=\\\"date\\\" placeholder=\\\"Enter Pickup Location\\\" [readonly]=\\\"!flag\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:bookingCarService.get('pickupDetail').get('pickupDate').invalid&&bookingCarService.get('pickupDetail').get('pickupDate').touched}\\\"\\n                            id=\\\"pickupDate\\\" formControlName=\\\"pickupDate\\\">\\n                    </div>\\n                    <span class=\\\"error-text\\\" *ngIf=\\\"bookingCarService.get('pickupDetail').get('pickupDate').invalid&&bookingCarService.get('pickupDetail').get('pickupDate').touched\\\">*Required Field</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n        <button type=\\\"submit\\\" title=\\\"Fill all the field to enable submit button\\\" class=\\\"btn btn-primary btn-space\\\" [disabled]=\\\"bookingCarService.invalid\\\"\\n            (click)=\\\"submitBooking()\\\">Submit</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelBooking()\\\">Cancel</button>\\n\\n    </div>\\n</div>\"","export default \"<app-user-header></app-user-header>\\n\\n<div>\\n    <div class=\\\"margin-top-1vw login-div\\\">\\n        <h3 class=\\\"text-center\\\">\\n\\n            <span class=\\\"badge badge-secondary icon-medium\\\">\\n                <i class=\\\"fa fa-dashcube\\\" aria-hidden=\\\"true\\\"></i>\\n                User Dashboard</span>\\n        </h3>\\n        <div class=\\\"modal-body row\\\">\\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-success\\\" [routerLink]=\\\"['userBookingService']\\\" style=\\\"width: 18rem;\\\">\\n                <div class=\\\"card-body\\\">\\n\\n                    <h5 class=\\\"card-title text-center\\\" >\\n                        <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> Booking For Service</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-info\\\" style=\\\"width: 18rem;\\\" [routerLink]=\\\"['userBookingHistory']\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center\\\">\\n                        <i class=\\\"fa fa-history\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> View Older History</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n\\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-primary \\\" style=\\\"width: 18rem;\\\" [routerLink]=\\\"['userEdit']\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center\\\">\\n                        <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> User Profile</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n            \\n            <div class=\\\"card\\\" class=\\\"dashboard-div hover btn-danger\\\" style=\\\"width: 18rem;\\\" [routerLink]=\\\"['changepassword']\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                        <b> Change Password</b>\\n                    </h5>\\n                    <p class=\\\"card-text\\\"></p>\\n                    <!-- <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Click Here</a> -->\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","export default \"<app-user-header></app-user-header>\\n<div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\">\\n    <i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i>\\n</div>\\n<div class=\\\"margin-top-1vw login-div\\\" *ngIf=\\\"!loadSpinner\\\">\\n    <div>\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Booking Detail for Vechile No.: \\\" {{serviceDetail.vechileNo}} \\\"</span>\\n        </h3>\\n        <div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\">\\n            <i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i>\\n        </div>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"modal-body row\\\">\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileNo\\\">Vechile Number</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-id-card\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vechileNo\\\" [(ngModel)]=\\\"serviceDetail.vechileNo\\\">\\n                </div>\\n            </div>\\n            \\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"vechileType\\\">Vechile Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-car\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select disabled id=\\\"vechileType\\\" class=\\\"browser-default custom-select\\\" [(ngModel)]=\\\"serviceDetail.vechileType\\\">\\n                        <option value=\\\"hb\\\">Hatchback</option>\\n                        <option value=\\\"sd\\\">Sedan</option>\\n                        <option value=\\\"cv\\\">Convertible</option>\\n                    </select>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"ownerName\\\">Vechile Owner Name</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firmName\\\" [(ngModel)]=\\\"serviceDetail.ownerName\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"mobileNo\\\">Mobile No</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firmName\\\" [(ngModel)]=\\\"serviceDetail.mobileNo\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceType\\\">Service Type</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-wrench\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <select disabled class=\\\"browser-default custom-select\\\" id=\\\"serviceType\\\" [(ngModel)]=\\\"serviceDetail.serviceType\\\">\\n                        <option value=\\\"fcs\\\">Full Car Service</option>\\n                        <option value=\\\"mcs\\\">Major Car Service</option>\\n                        <option value=\\\"ics\\\">Interim Car Service</option>\\n                    </select>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"requirement\\\">Requirement</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-list\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <textarea readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"requirement\\\" [(ngModel)]=\\\"serviceDetail.requirement\\\"></textarea>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"budgetPrice\\\">Budget Price</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            ₹\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"budgetPrice\\\" [(ngModel)]=\\\"serviceDetail.budgetPrice\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"areaLocation\\\">Area Location</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"areaLocation\\\" [(ngModel)]=\\\"serviceDetail.areaLocation\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"serviceDate\\\">Service Date</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"serviceDate\\\" [(ngModel)]=\\\"serviceDetail.serviceDate\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"modal-body row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"pickLocation\\\">PickUp Location</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-street-view\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pickLocation\\\" [(ngModel)]=\\\"serviceDetail.pickLocation\\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"pickupDate\\\">PickUP Date</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input readonly type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"pickupDate\\\" [(ngModel)]=\\\"serviceDetail.pickupDate\\\">\\n                </div>\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"deleteBoking()\\\">Delete</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelBooking()\\\">Cancel</button>\\n\\n    </div>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n    <a (click)=\\\"userDashboard()\\\" class=\\\"hover\\\"><i class=\\\"fa fa-dashcube\\\" aria-hidden=\\\"true\\\" style=\\\"color:aqua;font-size:3rem\\\"></i></a>\\n    <a class=\\\"text-fontFamily form-checkbox header-color\\\" style=\\\"color: #379f9f;\\\">Welcome : {{userLoggedIn|uppercase}}</a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\">\\n                <i title=\\\"User Profile\\\" class=\\\"fa fa-user icon-medium user-icon-color hover\\\" [ngClass]=\\\"{highlightIcon:status}\\\" (click)=\\\"showHideDiv()\\\"\\n                    aria-hidden=\\\"true\\\"></i>\\n            </a>\\n\\n            <div class=\\\"profile-menu\\\" [ngClass]=\\\"{toggleShowHideDiv:status}\\\">\\n                <button class=\\\"dropdown-item\\\" type=\\\"button\\\" [routerLink]=\\\"['userEdit']\\\" (click)=\\\"hideSelection()\\\">\\n                    <i class=\\\"fa fa-user-circle\\\" aria-hidden=\\\"true\\\"> Edit Profile</i>\\n\\n                </button>\\n                <button class=\\\"dropdown-item\\\" type=\\\"button\\\">\\n                        Option\\n    \\n                    </button>\\n\\n            </div>\\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link hover\\\">\\n                <i title=\\\"User Logout\\\" class=\\\"fa fa-sign-out icon-medium user-icon-color\\\" (click)=\\\"userLogout()\\\" aria-hidden=\\\"true\\\"></i>\\n            </a>\\n        </li>\\n    </ul>\\n</nav>\\n\"","export default \"<app-user-header></app-user-header>\\n<div>\\n    <div class=\\\"margin-top-1vw booking-history-div\\\">\\n        <h3 class=\\\"text-center col-md-12\\\">\\n\\n            <span class=\\\"badge badge-secondary icon-medium\\\">\\n                <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\n                View All Older History</span>\\n        </h3>\\n        <div class=\\\"error-message\\\" *ngIf=\\\"errorMesg\\\">{{errorMesg}}</div>\\n        <div *ngIf=\\\"loadSpinner\\\" class=\\\"spinner-div\\\"><i class=\\\"fa fa-spinner fa-spin spinner-style\\\"></i></div>\\n        <div class=\\\"modal-body row\\\" *ngIf=\\\"!loadSpinner\\\">\\n            <div *ngFor=\\\"let eachBooking of allBookingHistory\\\"  class=\\\"card hover\\\" (click)=\\\"detailedBooking(eachBooking._id.$oid)\\\" style=\\\"width: 18rem;margin-left:2px\\\" id=\\\"{{eachBooking._id.$oid}}\\\">\\n                <div class=\\\"card-body text-left\\\" (click)=\\\"detailedBooking(eachBooking._id)\\\">\\n                    <b>Vechile No.:</b>{{eachBooking.vechileNo}}\\n                    <br>\\n                    <b>Service Date:</b>{{eachBooking.serviceDate|date:'dd/MM/yyyy'}}\\n                    <br>\\n                    <b>Pricing:</b>{{eachBooking.budgetPrice|currency:'INR'}}\\n                    <p class=\\\"card-text\\\"></p>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n    </div>\"","export default \"<!-- <nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n        <div class=\\\"form-group\\\">\\n        <a routerLink=\\\"backhome\\\">\\n        <i class=\\\"fa fa-home font-size-medium\\\" title=\\\"Back to home page\\\"aria-hidden=\\\"true\\\"></i>        \\n        </a>\\n        </div>       \\n    \\n</nav> -->\\n<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"https://irp-cdn.multiscreensite.com/4787128b/dms3rep/multi/mobile/Car-Care-new-logo.png\\\" style=\\\"width:100px\\\">\\n    </a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"user\\\">Customer</a>\\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link hover\\\" (click)=\\\"serviceProviderSignIn()\\\">Service Provider</a>\\n        </li>\\n    </ul>\\n</nav>\\n<div [formGroup]=\\\"userLoginForm\\\">\\n    <div class=\\\"col-md-3 margin-top-1vw login-div\\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">Customer Login Form</span>\\n        </h3>\\n        <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"mobileNo\\\">Mobile Number</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter 10 digit mobile number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:userLoginForm.get('mobileNo').invalid&&userLoginForm.get('mobileNo').touched}\\\"\\n                    id=\\\"mobileNo\\\" formControlName=\\\"mobileNo\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"userLoginForm.get('mobileNo').invalid&&userLoginForm.get('mobileNo').touched\\\">*Required Field and 10digit</span>\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"password\\\" placeholder=\\\"Enter the password\\\" class=\\\"form-control\\\" id=\\\"password\\\" formControlName=\\\"userPassword\\\"\\n                    [ngClass]=\\\"{error:userLoginForm.get('userPassword').invalid &&userLoginForm.get('userPassword').touched}\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"userLoginForm.get('userPassword').invalid &&userLoginForm.get('userPassword').touched\\\">*Required Field</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"form-check\\\">\\n                <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"gridCheck\\\" formControlName=\\\"rememberMe\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"gridCheck\\\">\\n                    Remember Me\\n                </label>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"btn-toolbar\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"userLoginForm.invalid\\\" title=\\\"Please fill the required field to enable SignIn button\\\" class=\\\"btn btn-primary btn-space\\\"\\n                (click)=\\\"submitUser()\\\">Sign in</button>\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelSignIn()\\\">Cancel</button>\\n            <div *ngIf=\\\"loadSpinner\\\"><i class=\\\"fa fa-spinner fa-spin\\\" style=\\\"font-size:24px\\\"></i></div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"btn-space\\\">Forget Password ?</label>\\n            <a routerLink=\\\"forgetPassword\\\">Click here</a>\\n            <br>\\n            <label class=\\\"btn-space\\\">To signup</label>\\n            <a routerLink=\\\"usersignup\\\">Click here</a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        <img src=\\\"https://irp-cdn.multiscreensite.com/4787128b/dms3rep/multi/mobile/Car-Care-new-logo.png\\\" style=\\\"width:100px\\\">\\n    </a>\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"user\\\">Customer</a>\\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link hover\\\" (click)=\\\"serviceProviderSignIn()\\\">Service Provider</a>\\n        </li>\\n    </ul>\\n</nav>\\n<div [formGroup]=\\\"userSignUp\\\">\\n    <div class=\\\"col-md-3 margin-top-1vw login-div \\\">\\n        <h3 class=\\\"text-center\\\">\\n            <span class=\\\"badge badge-secondary \\\">User SignUP</span>\\n        </h3>\\n        <div class=\\\"form-group\\\">\\n            <div *ngIf=\\\"successMesg\\\" class=\\\"success-message\\\">{{successMesg}}</div>\\n            <div *ngIf=\\\"errorMesg\\\" class=\\\"error-message\\\">{{errorMesg}}</div>\\n            <label for=\\\"userName\\\">User Name</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Customer Name\\\" (blur)=\\\"logValidationError(userSignUp)\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'error':formErr.userName}\\\"\\n                    id=\\\"userName\\\" formControlName=\\\"userName\\\">\\n            </div>\\n            <span class=\\\"error-text\\\" *ngIf=\\\"formErr.userName\\\">{{formErr.userName}}</span>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"mobileNo\\\" style=\\\"display:block\\\">Mobile Number</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter 10 digit mobile number\\\" (blur)=\\\"logValidationError(userSignUp)\\\" class=\\\"form-control col-md-10\\\"\\n                    [ngClass]=\\\"{error:formErr.mobileNo}\\\" id=\\\"mobileNo\\\" style=\\\"display:inline\\\" formControlName=\\\"mobileNo\\\">\\n            </div>\\n\\n            <span class=\\\"error-text\\\" *ngIf=\\\"formErr.mobileNo\\\">{{formErr.mobileNo}}</span>\\n\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"emailId\\\" style=\\\"display:block\\\">Email-Id</label>\\n            <div class=\\\"input-group mb-3\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                        <i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i>\\n                    </span>\\n                </div>\\n                <input type=\\\"text\\\" placeholder=\\\"Enter Email-Id\\\" (blur)=\\\"logValidationError(userSignUp)\\\" class=\\\"form-control col-md-10\\\"\\n                    [ngClass]=\\\"{error:formErr.emailId}\\\" id=\\\"mobileNo\\\" style=\\\"display:inline\\\" formControlName=\\\"emailId\\\">\\n            </div>\\n\\n            <span class=\\\"error-text\\\" *ngIf=\\\"formErr.emailId\\\">{{formErr.emailId}}</span>\\n\\n\\n        </div>\\n\\n        <div formGroupName=\\\"matchingPassword\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Enter Password</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"password\\\" [ngClass]=\\\"{error:formErr.password||userSignUp.controls.matchingPassword.controls.confirmPassword?.errors?.notEqual}\\\"\\n                        class=\\\"form-control\\\" id=\\\"password\\\" (blur)=\\\"logValidationError(userSignUp)\\\" placeholder=\\\"Please enter password\\\"\\n                        formControlName=\\\"password\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"formErr.password\\\">{{formErr.password}}</span>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"userSignUp.controls.matchingPassword.controls.confirmPassword?.errors?.notEqual\\\">*Password and confirm Password donot match</span>\\n\\n\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                <div class=\\\"input-group mb-3\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">\\n                            <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i>\\n                        </span>\\n                    </div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{error:formErr.confirmPassword}\\\" compareField=\\\"password\\\" (blur)=\\\"logValidationError(userSignUp)\\\"\\n                        id=\\\"confirmPassword\\\" placeholder=\\\"Please confirm password\\\" formControlName=\\\"confirmPassword\\\">\\n                </div>\\n                <span class=\\\"error-text\\\" *ngIf=\\\"formErr.confirmPassword\\\">{{formErr.confirmPassword}}</span>\\n\\n            </div>\\n        </div>\\n        <button type=\\\"submit\\\" title=\\\"Fill all the field to enable submit button\\\" class=\\\"btn btn-primary btn-space\\\" [disabled]=\\\"userSignUp.invalid\\\"\\n            (click)=\\\"submitUser()\\\">Submit</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-space\\\" (click)=\\\"cancelSignIn()\\\">Cancel</button>\\n    </div>\\n</div>\"","import { AbstractControl} from '@angular/forms';\r\n\r\n\r\n\r\n \r\nexport class CustomValidator {\r\n\r\n    static numberValidation(control: AbstractControl) {\r\n        if (control.value.match(/\\D/)) {\r\n            return { ERROR: 'Not a number' }\r\n        }\r\n        return null;\r\n    };\r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n    const errorMessage = {\r\n        'userName':{\r\n            'required':\"User Name required \"\r\n        },\r\n        'mobileNo':{\r\n            'required':\"* Mobile Number required\",\r\n            'minlength':\"* Mobile Number should be of 10 digit\",\r\n            'maxlength':\"* Mobile Number should be of 10 digit\",\r\n            'pattern':\"* Mobile Number should be number\"\r\n        },        \r\n        \"password\":{\r\n            'required':\"Password is required\",\r\n            \r\n        },\r\n        \"confirmPassword\":{\r\n            'required':\"confirm Password is required\",\r\n            \"notEqual\":\"*Password and confirm Password donot match\"\r\n        },\r\n        \"emailId\":{\r\n            'required':\"Email-Id is required\",\r\n            \"email\":\"Emid-Id should should be format xyx@gmail.com\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const formErrors ={ \r\n        'userName':\"\",\r\n        'mobileNo':\"\",\r\n        'password':\"\",\r\n        'confirmPassword':\"\",\r\n        'emailId':\"\"\r\n\r\n    }\r\n\r\n    export const validationMessage ={ errorMessage,formErrors }\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css', '../../shared/shared.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePassword; errorMesg: String = \"\"\n\n  constructor(private formBuilder: FormBuilder,private databaseCall:DatabaseHttpCallService,private router:Router) { }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n    this.changePassword = this.formBuilder.group({\n      newPassword: [\"\", Validators.required],\n      confirmPassword: [\"\", Validators.required]\n    })\n  }\n\n  //this is a common line\n\n  changeUserPassword(firstValue, secondValue) {\n    try {\n      if (firstValue == secondValue) {\n        this.databaseCall.postData('changePassword',{\"userPassword\":secondValue}).subscribe(res=>this.router.navigate(['/user']),error=>{\n          if(error.error && error.error.err ){\n        this.errorMesg = error.error.err;\n      }\n        })\n      }\n      else {\n        this.errorMesg = \"New Password and Confirm Password donot match\"\n      }\n\n    }\n    catch (error) {\n      console.log(\"error.error.err\");\n      // if(error.error && error.error.err ){\n      //   this.errorMesg = error.error.err;\n      // }\n    }\n\n  }\n\n}\n","export default \".user-profile-image{\\r\\n    text-align: center;    \\r\\n    margin-left: 39%;\\r\\n    border:1px solid black\\r\\n}\\r\\n\\r\\n.edit-img-position{\\r\\n    right: 0px;    \\r\\n    top: 0px;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.img-peview{\\r\\n    margin: 0 auto; \\r\\n    border:2px solid black\\r\\n}\\r\\n\\r\\n.img-peview img{\\r\\n    width:100%;\\r\\n    height:100%;\\r\\n    border-radius:50%\\r\\n}\\r\\n\\r\\n.img-div{\\r\\n    width: 10vw;    \\r\\n    height: 10vw;  \\r\\n    border-radius: 50%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9lZGl0LXVzZXIvZWRpdC11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCO0FBQ0o7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsUUFBUTtJQUNSLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZDtBQUNKOztBQUNBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWDtBQUNKOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC91c2VyL2VkaXQtdXNlci9lZGl0LXVzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLXByb2ZpbGUtaW1hZ2V7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICAgIFxyXG4gICAgbWFyZ2luLWxlZnQ6IDM5JTtcclxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2tcclxufVxyXG5cclxuLmVkaXQtaW1nLXBvc2l0aW9ue1xyXG4gICAgcmlnaHQ6IDBweDsgICAgXHJcbiAgICB0b3A6IDBweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxufVxyXG5cclxuLmltZy1wZXZpZXd7XHJcbiAgICBtYXJnaW46IDAgYXV0bzsgXHJcbiAgICBib3JkZXI6MnB4IHNvbGlkIGJsYWNrXHJcbn1cclxuLmltZy1wZXZpZXcgaW1ne1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDoxMDAlO1xyXG4gICAgYm9yZGVyLXJhZGl1czo1MCVcclxufVxyXG5cclxuLmltZy1kaXZ7XHJcbiAgICB3aWR0aDogMTB2dzsgICAgXHJcbiAgICBoZWlnaHQ6IDEwdnc7ICBcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css', '../../shared/shared.css']\n})\nexport class EditUserComponent implements OnInit {\n  successMesg:String; errorMesg:String; editProfile ;uploadImg:boolean=false;imagePreview;\n\n  user = {\n    userName: \"\",\n    mobileNo: \"\",\n    emailId: \"\",\n    address: \"\",\n    pinCode: \"\"\n  }\n  constructor(public formBuilder: FormBuilder, public databaseCall: DatabaseHttpCallService, private router: Router) {}\n\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n    this.databaseCall.getData('userData').subscribe((res: any) => {\n      this.user.userName = res.data.userName\n      this.user.mobileNo = res.data.mobileNo\n      this.user.emailId = res.data.emailId\n      this.user.address = res.data.address\n      this.user.pinCode = res.data.pinCode\n    }, error => {\n      this.router.navigate([\"/user\"]);\n      // console.log(error)\n    });\n\n    this.editProfile = this.formBuilder.group({\n      userName: [{ value: \"\", key1: \"riteshkumar\" }],\n      mobileNo: [{ value: '', disabled: true }],\n      emailId: ['', Validators.email],\n      address: [],\n      pinCode: ['', [Validators.minLength(6), Validators.maxLength(6), Validators.pattern('[0-9]*')]]\n    })\n\n\n  }\n\n  updateUser() {\n    let controls = this.editProfile.controls;\n    let toUpdateField: any = {};\n    for (let e in controls) {\n      if (controls[e].dirty) {\n        toUpdateField[e] = controls[e].value;\n      }\n    }\n    if (Object.entries(toUpdateField).length > 0) {\n      this.databaseCall.postData('userupdate', toUpdateField).subscribe(res => console.log(res));\n    }\n    else{\n      this.errorMesg=\"There is no change in user profile\";\n    }\n\n  }\n\n  cancelEdit() {\n    this.router.navigate([\"/user/userdashboard\"])\n  }\n\n  selectFile(event:Event){\n    let fileSelected = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n    reader.onload = ()=>{\n      this.imagePreview = reader.result\n      console.log(this.imagePreview)\n    }\n\n    reader.readAsDataURL(fileSelected)\n\n  }\n\n  toggleImgUpload(){\n    this.uploadImg=!this.uploadImg;\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1ib29raW5nLXNlcnZpY2UvdXNlci1ib29raW5nLXNlcnZpY2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from 'selenium-webdriver/http';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-booking-service',\n  templateUrl: './user-booking-service.component.html',\n  styleUrls: ['./user-booking-service.component.css', '../../shared/shared.css']\n})\nexport class UserBookingServiceComponent implements OnInit {\n  bookingCarService; presentDate = new Date();flag\n  successMesg; errorMesg;\n  requiredField = \"* Required Field\";\n  pickupRequired:boolean;\n  loadSpinner:boolean=false;\n  // pickupRequire = this.bookingCarService.get(\"pickUp\").value\n\n  constructor(public formBuilder: FormBuilder, public databaseCall: DatabaseHttpCallService,public router:Router) {\n    this.bookingCarService = this.formBuilder.group({\n      vechileNo: ['', Validators.required],\n      vechileType: ['', Validators.required],\n      ownerName: ['', Validators.required],\n      mobileNo: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[0-9]*')]],\n      serviceType: ['', Validators.required],\n      requirement: ['', Validators.required],\n      budgetPrice: ['', Validators.required],\n      areaLocation: ['', Validators.required],\n      serviceDate: [this.presentDate, Validators.required],\n      pickUp: [''],\n      pickupDetail: this.formBuilder.group({\n        pickLocation: [''],\n        pickupDate: [''],\n      }),\n    })\n  }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n  }\n\n  submitBooking() {\n    this.loadSpinner=true;\n    this.databaseCall.postData('user-car-booking', this.bookingCarService.value).subscribe(res => {\n      this.loadSpinner=false;\n      this.errorMesg = \"\";\n      this.successMesg = `Booking has been saved`;\n      this.bookingCarService.reset();\n      \n    },\n      error => {\n        this.loadSpinner=false;\n        this.successMesg = \"\";\n        this.errorMesg = \"Please try again after sometime as couldnot connect to database\"\n      }\n    )\n  }\n\n  cancelBooking() {\n    this.router.navigate([\"/user/userdashboard\"])\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1kYXNoYm9hcmQvdXNlci1kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css', '../../shared/shared.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n\n  constructor(private databaseCall: DatabaseHttpCallService, private router: Router) {\n    \n\n  }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1kZXRhaWxlZC1ib29raW5nL3VzZXItZGV0YWlsZWQtYm9va2luZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-detailed-booking',\n  templateUrl: './user-detailed-booking.component.html',\n  styleUrls: ['./user-detailed-booking.component.css', '../../shared/shared.css']\n})\nexport class UserDetailedBookingComponent implements OnInit {\n  \n  presentDate: any; vechileRegistered; loadSpinner: boolean = false; objectId: String = \"\"; errorMesg: String = \"\"\n  serviceDetail = {\n    vechileNo: \"\",\n    vechileType: \"\",\n    ownerName: \"\",\n    serviceType: \"\",\n    requirement: \"\",\n    budgetPrice: \"\",\n    areaLocation: \"\",\n    serviceDate: \"\",\n    pickLocation: \"\",\n    pickupDate: \"\",\n    mobileNo: \"\"\n  }\n\n  constructor(public databaseCall: DatabaseHttpCallService, public router: Router, private activeRoute: ActivatedRoute) {\n\n\n  }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n    this.loadSpinner = true;\n    this.activeRoute.queryParams.subscribe(res => {\n      this.databaseCall.getData('bookingById', res).subscribe((res: any) => {\n        console.log(res._id)\n        this.loadSpinner = false;\n        this.objectId = res._id;\n        this.serviceDetail.vechileNo = res.vechileNo;\n        this.serviceDetail.vechileType = res.vechileType;\n        this.serviceDetail.ownerName = res.ownerName;\n        this.serviceDetail.serviceType = res.serviceType;\n        this.serviceDetail.requirement = res.requirement;\n        this.serviceDetail.budgetPrice = res.budgetPrice;\n        this.serviceDetail.mobileNo = res.mobileNo\n        this.serviceDetail.areaLocation = res.areaLocation;\n        this.serviceDetail.serviceDate = res.serviceDate;\n        this.serviceDetail.pickLocation = res.pickupDetail.pickLocation;\n        this.serviceDetail.pickLocation = res.pickupDetail.pickLocation;\n      })\n    })\n  }\n\n  deleteBoking() {\n    if (confirm(\"Are you sure to delete \")) {\n      this.databaseCall.deleteById('deleteuserbooking', { _id: this.objectId }).subscribe(res => {\n        this.router.navigate(['/user/userdashboard/userBookingHistory'])\n\n      }),\n        error => {\n          if (error.error) {\n            if (error.error.err) {\n              this.errorMesg = error.error.err;\n            }\n          }\n          else\n            this.errorMesg = \"Technical Error...Contact service provider\"\n        }\n\n    }\n\n  }\n  cancelBooking() {\n    this.router.navigate(['/user/userdashboard'])\n  }\n\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1oZWFkZXIvdXNlci1oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\n\n@Component({\n  selector: 'app-user-header',\n  templateUrl: './user-header.component.html',\n  styleUrls: ['./user-header.component.css', '../../shared/shared.css']\n})\nexport class UserHeaderComponent implements OnInit {\n  userLoggedIn;\n  status: boolean = false;\n\n  constructor(private router: Router, private databaseCall: DatabaseHttpCallService) {\n    this.userLoggedIn = localStorage.getItem(\"userName\")\n  }\n\n  ngOnInit() {\n  }\n\n  userDashboard() {\n    this.router.navigate([\"user/userdashboard\"])\n  }\n\n  showHideDiv() {\n    this.status = !this.status;\n  }\n  hideSelection() {\n    this.status = false;\n    this.router.navigate([\"user/userdashboard/userEdit\"])\n  }\n\n  userLogout() {\n\n    this.databaseCall.updateDocument('logout').subscribe(response => {\n      localStorage.clear();\n      this.router.navigate([\"/user\"]);\n    }\n      , error => console.log(error))\n\n  }\n}\n","export default \".booking-history-div{\\r\\n    text-align: center;\\r\\n    display:inline-block;\\r\\n    border: 2px solid black;\\r\\n    width: 80%;\\r\\n    border-radius:10px;\\r\\n    box-shadow: 7px 10px #888;\\r\\n    height:70%;\\r\\n    margin-left:10%;\\r\\n    margin-right:10%;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLW9sZGVyLWhpc3RvcnkvdXNlci1vbGRlci1oaXN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLHVCQUF1QjtJQUN2QixVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixVQUFVO0lBQ1YsZUFBZTtJQUNmLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoic3JjL2FwcC91c2VyL3VzZXItb2xkZXItaGlzdG9yeS91c2VyLW9sZGVyLWhpc3RvcnkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib29raW5nLWhpc3RvcnktZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBib3JkZXItcmFkaXVzOjEwcHg7XHJcbiAgICBib3gtc2hhZG93OiA3cHggMTBweCAjODg4O1xyXG4gICAgaGVpZ2h0OjcwJTtcclxuICAgIG1hcmdpbi1sZWZ0OjEwJTtcclxuICAgIG1hcmdpbi1yaWdodDoxMCU7XHJcblxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-older-history',\n  templateUrl: './user-older-history.component.html',\n  styleUrls: ['./user-older-history.component.css','../../shared/shared.css']\n})\nexport class UserOlderHistoryComponent implements OnInit {\n  allBookingHistory;loadSpinner:boolean=false;errorMesg:String;\n\n  constructor(public databaseCall:DatabaseHttpCallService,private router:Router) { }\n\n  ngOnInit() {\n    if(!localStorage.getItem(\"userName\")){\n      this.router.navigate(['/user'])\n    }\n\n\n    this.loadSpinner=true;\n    this.databaseCall.getData('usercarbookinghistory').subscribe((res:any)=>\n    {\n      this.loadSpinner=false;\n      this.allBookingHistory=res.data;\n    },error=>{\n      this.loadSpinner=false;\n      if (error.error) {\n        if (error.error.err) {\n          this.errorMesg = \"User Id and Password doesnot match\"\n        }\n      }\n      else\n        this.errorMesg = \"Technical Error...Contact service provider\"\n\n    })\n  }\n\n  showBookingHistory(){\n    console.log(this.allBookingHistory)\n  }\n\n  detailedBooking(id){\n    if(id){\n      this.router.navigate(['/user/userdashboard/eachbookinghistory'],{queryParams:{_id:id}})\n    }\n    // this.databaseCall.getData()\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersigninComponent } from 'src/app/user/usersignin/usersignin.component';\nimport { UsersignupComponent } from 'src/app/user/usersignup/usersignup.component';\nimport { ForgetpasswordComponent } from 'src/app/shared/forgetpassword/forgetpassword.component';\nimport { UserDashboardComponent } from 'src/app/user/user-dashboard/user-dashboard.component';\nimport { UserBookingServiceComponent } from 'src/app/user/user-booking-service/user-booking-service.component';\nimport { UserOlderHistoryComponent } from 'src/app/user/user-older-history/user-older-history.component';\nimport { EditUserComponent } from 'src/app/user/edit-user/edit-user.component';\nimport { UserDetailedBookingComponent } from 'src/app/user/user-detailed-booking/user-detailed-booking.component';\nimport { ChangePasswordComponent } from 'src/app/user/change-password/change-password.component';\n\n//home route is \"user\"\nconst routes: Routes = [\n  {\n    path:'',\n    component:UsersigninComponent\n  },\n  {\n    path:'usersignup',\n    component:UsersignupComponent\n  },\n  {\n    path:'forgetPassword',\n    component:ForgetpasswordComponent\n  },\n  {\n    path:\"backhome\",\n    redirectTo:\"/\",\n    pathMatch:'full'\n    \n  },\n  {\n    path:\"usersignup/backlogin\",\n    redirectTo:\"\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"user\",\n    redirectTo:\"\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"usersignup/user\",\n    redirectTo:\"\",\n    pathMatch:\"full\"\n  },\n  {\n    path:\"userdashboard\",\n    component:UserDashboardComponent\n  },\n  {\n    path:'userdashboard/userBookingService',\n    component:UserBookingServiceComponent\n  },\n  {\n    path:'userdashboard/userBookingHistory',\n    component:UserOlderHistoryComponent\n  },\n  {\n    path:'userdashboard/userEdit',\n    component:EditUserComponent\n  },\n  {\n    path:'userdashboard/userEdit/userEdit',\n    redirectTo:\"userdashboard/userEdit\",\n    pathMatch:\"full\"\n  },\n  {\n    path:'userdashboard/eachbookinghistory',\n    component:UserDetailedBookingComponent\n  },\n  {\n    path:'userdashboard/changepassword',\n    component:ChangePasswordComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UsersigninComponent } from './usersignin/usersignin.component';\nimport { UsersignupComponent } from './usersignup/usersignup.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { UserBookingServiceComponent } from './user-booking-service/user-booking-service.component';\nimport { UserHeaderComponent } from './user-header/user-header.component';\nimport { UserOlderHistoryComponent } from './user-older-history/user-older-history.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { UserService } from 'src/app/user/user.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UserDetailedBookingComponent } from './user-detailed-booking/user-detailed-booking.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\n\n\n\n\n@NgModule({\n  declarations: [UsersigninComponent, UsersignupComponent, UserDashboardComponent, UserBookingServiceComponent, UserHeaderComponent, UserOlderHistoryComponent, EditUserComponent, UserDetailedBookingComponent, ChangePasswordComponent],\n  imports: [\n    CommonModule,FormsModule,\n    UserRoutingModule,FormsModule,ReactiveFormsModule,SharedModule,HttpClientModule\n  ],\n  providers:[UserService]\n})\nexport class UserModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(public router:Router,private databaseCall:DatabaseHttpCallService) { }\n  \n  serviceProviderSignIn(){\n    this.router.navigate(['/serviceprovider'])\n  }\n\n\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlcnNpZ25pbi91c2Vyc2lnbmluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { CustomValidator } from '../../shared/custom-validator';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { DatabaseHttpCallService } from 'src/app/shared/database-http-call.service';\n\n\n@Component({\n  selector: 'app-usersignin',\n  templateUrl: './usersignin.component.html',\n  styleUrls: ['./usersignin.component.css', '../../shared/shared.css']\n})\nexport class UsersigninComponent implements OnInit {\n\n  userLoginForm; errorMesg; userLoggedIn; loadSpinner: boolean = false;\n\n  constructor(public formBuilder: FormBuilder, public router: Router, public userservice: UserService, public databaseCall: DatabaseHttpCallService) {\n    this.userLoginForm = formBuilder.group({\n      mobileNo: [\"\", [Validators.required, Validators.minLength(10), Validators.maxLength(10), CustomValidator.numberValidation]],\n      userPassword: [\"\", [Validators.required]],\n      rememberMe: [true],\n\n    });\n    if (localStorage.getItem(\"token\") && localStorage.getItem(\"user_id\")) {\n      this.router.navigate([\"/user/userdashboard\"]);\n    }\n\n  }\n\n  serviceProviderSignIn() {\n    this.userservice.serviceProviderSignIn()\n  }\n\n  // mobileNumberValidation(inputField) {\n  //   if (inputField.value.match(/\\D/)) {\n  //     return { ERROR: 'Not a number' }\n  //   }\n  //   return null;\n\n  // }\n\n  submitUser() {\n    this.errorMesg = \"\";\n    let searchParam = { \"userId\": this.userLoginForm.value.mobileNo, \"password\": this.userLoginForm.value.userPassword };\n    this.loadSpinner = true;\n    this.databaseCall.postData('usersignin', searchParam).subscribe((res: any) => {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('user_id', res.user._id);\n      localStorage.setItem('userName', res.user.userName)\n\n      this.router.navigate([\"/user/userdashboard\"]);\n    }, error => {\n      this.loadSpinner = false;\n      if (error.error) {\n        if (error.error.err) {\n          this.errorMesg = \"User Id and Password doesnot match\"\n        }\n      }\n      else\n        this.errorMesg = \"Technical Error...Contact service provider\"\n\n    })\n\n  }\n\n  cancelSignIn() {\n    this.router.navigate([\"/\"])\n  }\n\n  ngOnInit() {\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlcnNpZ251cC91c2Vyc2lnbnVwLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Directive, Input } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, AbstractControl, FormControl, FormArray } from '@angular/forms';\nimport { CustomValidator } from '../../shared/custom-validator';\nimport { validationMessage } from 'src/app/shared/validation-message'\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { DatabaseHttpCallService } from '../../shared/database-http-call.service'\nimport { error } from 'selenium-webdriver';\n\n\n\n@Component({\n  selector: 'app-usersignup',\n  templateUrl: './usersignup.component.html',\n  styleUrls: ['./usersignup.component.css', '../../shared/shared.css']\n})\n\n\nexport class UsersignupComponent implements OnInit {\n  userSignUp; passwordDisabled = false; successMesg; errorMesg\n  matchingPassword;\n  validationMsg = validationMessage.errorMessage;\n  formErr = validationMessage.formErrors;\n\n\n  constructor(public formBuilder: FormBuilder, public router: Router, public userservice: UserService, public databaseCall: DatabaseHttpCallService) {\n    this.userSignUp = this.formBuilder.group({\n      userName: [\"\", [Validators.required]],\n      mobileNo: [\"\", [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[0-9]*')]],\n      emailId:[\"\",[Validators.required,Validators.email]],\n      matchingPassword: this.formBuilder.group({\n        password: [\"\", [Validators.required]],\n        confirmPassword: [\"\", [Validators.required]],\n      })\n\n    }\n    );\n    this.userSignUp.valueChanges.subscribe(e => this.logValidationError(this.userSignUp))\n\n  }\n\n\n\n  ngOnInit() {\n  }\n\n  get confirmPassword() {\n    return this.userSignUp.get('confirmPassword');\n  }\n\n\n\n\n  logValidationError(formgroup: FormGroup) {\n    Object.keys(formgroup.controls).forEach((eachControl: string) => {\n      const abstrachControl = formgroup.get(eachControl);\n      if (abstrachControl instanceof FormGroup) {\n        this.logValidationError(abstrachControl)\n      }\n      else {\n        this.formErr[eachControl] = \"\";\n        if (abstrachControl && !abstrachControl.valid && (abstrachControl.touched || abstrachControl.dirty)) {\n          const message = this.validationMsg[eachControl]\n          for (const errorKey in abstrachControl.errors) {\n            if (errorKey) {\n              this.formErr[eachControl] += message[errorKey] + ' ';\n            }\n          }\n        }\n      }\n    })\n  }\n\n  serviceProviderSignIn() {\n    this.userservice.serviceProviderSignIn();\n  }\n\n  res\n\n  submitUser() {\n    this.successMesg = \"\";\n    this.databaseCall.postData('usersignup', this.userSignUp.value).subscribe((res: any) => {\n      this.errorMesg = \"\";\n      this.successMesg = \"\";\n\n      if (res.msg) {\n        this.successMesg = res.msg;\n        this.userSignUp.reset();\n\n      }\n      else {\n        this.errorMesg = \"Mobile is already registered\"\n      }\n\n    }, (error) => {\n      this.errorMesg = \"\";\n      error.error && error.error.err ? this.errorMesg = error.error.err : \"Contact Administrator\";\n    }\n\n    )\n\n  }\n\n  cancelSignIn() {\n    this.router.navigate([\"/user\"])\n  }\n\n}\n"],"sourceRoot":"webpack:///"}